---
import Facebook from "../icons/Facebook.astro";
import Google from "../icons/Google.astro";

/* Cada boton necesita un id unico */
const { urlFetch } = Astro.props;
const { idBtnGoogle } = Astro.props;
const { idBtnFacebook } = Astro.props;
const { action } = Astro.props;
---

<div
  id="containerBtns"
  data-action={action}
  class="flex justify-around gap-5 px-5"
>
  <button
    data-url={urlFetch}
    id={idBtnGoogle}
    data-id={idBtnGoogle}
    class="flex-grow flex justify-center rounded bg-white"
  >
    <Google className="py-1" />
  </button>
  <button
    data-url={urlFetch}
    id={idBtnFacebook}
    data-id={idBtnFacebook}
    class="flex-grow flex justify-center rounded bg-blue-700"
  >
    <Facebook className="py-1" />
  </button>
</div>

<script>
  /* <-----------------------------inicio de sesión con google-----------------> */

  import {
    FacebookAuthProvider,
    GoogleAuthProvider,
    signInWithPopup,
  } from "firebase/auth";
  import { obtenerMensajeDeError } from "../../constants/firebase/errores";
  import { app } from "../../firebase/client";
  import { getAuth } from "firebase/auth";
  import { idsBtnAuth, accionesAuth } from "./constants/idsBtnAuth";

  const auth = getAuth(app);

  /* Seleccion el tipo de acción a ejecutar registro || inicio */
  const action = document
    .querySelector("#containerBtns")
    .getAttribute("data-action");

  const idGoogle =
    action === accionesAuth.registro
      ? idsBtnAuth.idBtnGoogleRegistro
      : idsBtnAuth.idBtnGoogleInicio;

  const btnGoogle = document.querySelector(`#${idGoogle}`);

  btnGoogle.addEventListener("click", async (e) => {
    const urlFetch = btnGoogle.getAttribute("data-url");
    const provider = new GoogleAuthProvider();

    try {
      const credenciales = await signInWithPopup(auth, provider);
      const idToken = await credenciales.user.getIdToken();

      console.log(credenciales.user);

      const response = await fetch(urlFetch, {
        method: "POST",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
        body: JSON.stringify({ user: credenciales.user }),
      });

      if (response.status === 200) {
        window.location.assign("/");
      }
      const res = await response.json();
      alert(obtenerMensajeDeError(res.error.code));
    } catch (error) {
      console.log(error);
      alert(obtenerMensajeDeError(error.code));
    }
  });

  /* <-----------------------------inicio de sesión con facebook-----------------> */

  const idBtnFacebook =
    action === accionesAuth.registro
      ? idsBtnAuth.idBtnFacebookRegistro
      : idsBtnAuth.idBtnFacebookInicio;

  const btnFacebook = document.querySelector(`#${idBtnFacebook}`);

  btnFacebook.addEventListener("click", async (e) => {
    const urlFetch = btnFacebook.getAttribute("data-url");
    console.log(urlFetch);
    const provider = new FacebookAuthProvider();
    try {
      const credenciales = await signInWithPopup(auth, provider);
      const idToken = await credenciales.user.getIdToken();

      console.log(credenciales.user);

      const response = await fetch(urlFetch, {
        method: "POST",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
        body: JSON.stringify({ user: credenciales.user }),
      });

      if (response.status === 200) {
        window.location.assign("/");
      }
    } catch (error) {
      console.log(error);
      obtenerMensajeDeError(error.code);
    }
  });
</script>
